HTML : 하이퍼텍스트 마크업 언더 == 뼈대
CSS  : 캐스팅 스타일 시트       == 옷
JS   : 자바 스크립트            == 행동/동작

[ JS ] JavaScript
    -2009년 이후 node.js 나오면서 백엔드 역활 가능해졌다.
    -요즘 트랜드에서는 자바스크립트 매우 중요한 역활 한다.
    1. 웹 클라이언트 (HTML, CSS, JS)
    2. 웹 서버 (node.js) -> 자바없이도 백엔드 가능
    3. 모바일 (react.js native)
    4. 소프트웨어 (NW.js)

[ JS 사용하는 방법 ]
    방법1 : html 파일내 <body> 마크업 안에서 <script> 마크업 사용한다.
        <body>
            <script>
                js코드 작성
            </script>
        </body>

    방법2(권장) : Js 파일 생성하여 <head> 마크업에서 js파일 불러온다
        <head>
            <script  src="js파일경료"></script>
        </head>

[ 데이터 ]
    -데이터란? 한국어로는 자료, 컴퓨터언어가 이해하는 자료들, 리터럴
    1. 숫자 : 10, 3.14, 537
    2. 문자 : '안녕', "안녕", `안녕`
    3. 논리 : true, false
    
[ 타입 / 자료형 / 분류 ]
    -데이터들을 특정한 기준으로 분류한것
    -기본타입
    숫자타입 : Number       ex) 10, 3.14, 53718
    문자타입 : String       ex)'작은타옴표' 또는 "큰따옴표" 또는 `백틱`으로 감싼 자료
    논리타입 : Boolean      ex) true, false
    배열
    함수
    객체

[ JS의 출력 함수 ]
    1. console.log(출력할 값 또는 연산식) : 브라우저의 F12(개발자도구)에서 [콘솔]탭 에서 출력하는 함수.

[ JS 입력 함수 ]
    1.prompt()  : 알림 메세지와 입력(input) 기능을 제공하는 함수.
        *입력 받은 데이터 -> 문자열로 인식
        -문자 타입 --> 숫자 타입으로 입력 받기 : Number(prompt());
                    또는 parsInt 하여 int 값으로 형변환.
                    또는 입력 받은 값에 *1 하면 자동으로 숫자타입으로 형변환.
                
        
    
[ 변수와 상수 ]
    -공통 : - 데이터 *1개*를 저장할수 있는 메모리 공간
            - 메모리 공간의 상징적인 이름이 존재한다. (변수명, 상수명)
            - 자바와 다르게 변수타입이 자동으로 관리하기 때문에 타입 명시할 필요가 없다. 
            - let / const 로 선언 후 모든 자료를 저장 할 수 있다.

    1. 변수 : 변하는 수/값
        1. 변수 선언 : let 키워드
            let 변수명 :
            *값이 없는 변수 호출시 : undefined
        2. 변수 초기화 : 변수 선언시 처음에 값 대입 행위
            let 변수명 = 초기값;
        3. 변수 값 호출 : 변수명을 작성하면 변수가 갖는 값이 반환된다.
            변수명
        4. 변수 값 수정 : 기존의 변수명을 호출해서 새로운 값 대입
            변수명 = 새로운값
        5. 변수의 연산
            변수명 연산명


    2. 상수 : 변하지 않는 수/값
        1. 상수 선언 : const 키워드
            const 상수명 = 초기값; *상수는 무조건 초기값을 넣어야한다
        2. 상수 값 호출
            상수명
        3. 상수 값 수정[x] : 상수는 수정이 불가능하다.
            -Assigment to constant variable. 오류 발생
        4. 상수 연산
            상수명A + 데이터 + 상수명B
            

[ 연산자 ]
    *하나의 값을 도출하는 과정
    -연산(계산) 결과를 하나로 도출 하는 과정
    -연산(계산)에 사용되는 기호/특수문자
    -종류
        1. 산술연산자       : +덧셈, -뺄셈, *곱셉, /나눗셈,%나머지  
        2. 연결연산자       : + 앞뒤에 문자가 존재하면 덧셈이 아닌 연결을 한다.
        3. 비교연산자       : 
                >초과,<미만, >=이상, >=이하, ==같다,
                ===(타입과값)이 같다, !==(타입과값)다르다
        4. 관계연산자       : &&이면서, || 이거나, !아닌
        5. 복합대입연산자   : 
                = 오른쪽 항(값)을 왼쪽 항(변수)에 대입한다.
        6. 증강연산자       : 변수명 앞뒤에 ++또는 --입력하여 변수의 1증가 또는 감소, 빠른 연산
                ++변수명 : 선위 증가        --변수명 : 선위감소
                변수명++ : 후위 증가        변수명-- : 후위감소
                *주의할점 : 1. 특정변수에 1증가하는 코드를 작성하시오
                let value;
                1) value = value +1;
                2) value += 1;
                3) value++;
                *2 ;(세미콜론) 명령단위 기준으로 우선순위를 정한다
                    ++value; vs value++; 결과는 같다
                    console.log(value) console.log(value) 결과 다름.

        7. 삼항연산자       : 항이 3개라서 삼항연산자라고 한다.
            -첫번째 항 : 조건을 넣는다, 두번째 항: true일때 코드, 세번째 항 : false 일때 코드
            -조건 ? 참 : 거짓
            -(중첩)조건1?팜:조건2?참2:거짓
                -주로 간단한/ 짧은 논리조건은 삼항연산자 사용, 복잡한 조건은 if조건문 사용한다.
                -react.js 의 조건부랜더링 에서 주로 사용된다.


        -parseInt(나누기) : 몫












