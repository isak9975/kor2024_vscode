[ 배열 ]
    1. 순서대로 번호가 붙인 원소들이 연속적인 형태로 구성된 데이터 *타입*
    2. 인덱스? 순서대로 배정된 번호, 0번 시작, 길이 / 총개수 : 3이면 인데스 0,1,2
    3. 배열 선언 : 
        1. [] 대괄호
        2. [] 안에서 요소들을 ,(쉼표)를 이용한 요소 구분하여 열거한다.
        let 변수명 = [값1,값2,값3]
    4. 배열 호출
        배열변수명

    5. 배열의 특정 요소 호출
        배열변수명[인덱스] 

    6. 배열 수정
        1. 배열변수를 전체 수정 :
            배열변수명 =[새로운 배열]
        2. 배열변수의 특정한 요소 값 수정
            배열변수명[인덱스] = 새로운값

    7. 배열내 요소(값) 추가
        배열변수명.push(새로운값); : 맨뒤에 새로운 요소 추가
        배열변수명.splice(삽입인덱스,0,새로운값); : 삽입인덱스의 새로운 요소 추가

    8. 배열내 요소(값) 삭제
        배열변수명.splice(삭제인덱스,삭제개수) : 삭제 인덱스부터 삭제 개수만큼 요소 삭제

    9. 배열내 요소(값) 찾기
        배열변수명.indexOf(찾을값); : 배열내 찾을값이 존재하면 찾은 인덱스, 없으면 -1 반환
        배열변수명.includes(찾을값); : 배열내 찾을값이 존재하면 true, 없으면 false
    
    10. 배열 내 요소 총 개수 알기
        배열변수명.length;      : 배열내 요소들의 총개수를 반환

--------------------------------------------------------------------------------------------------
[ 문자열 ]
    1. "큰따옴표" , '작은따옴표', `백틱` 으로 감싼 데이터
    2. 이스케이프 / 제어 문자
        \n : 줄바꿈
        \t : 들여쓰기
        \\ : \한개 출력
        \' : '한개 출력
        \" : "한개 출력
    3. `백틱 템플릿
        1. 문자열 사이에 ${} 표현식 이용한 연산식을 연결할 수 있다.
        2. `문자열 ${연산식} 문자열B ${연산식} 문자열C`
        3. HTML과 JS가 같이 사용될때 주로 사용됨. REACT(HTML+JS => 한파일)
            -H(Hyper) T(Text)ML 은 문자 타입만 가능한 언어
            -Js는 다양한 타입이 존재하는 언어   

[ JS 사용하는 방법 ]
    방법2(권장) : JS 파일(.js) 생성하며 <head> 또는 <body> 마크업에서 js파일을 불러온다.
    1. html 모두 랜더링(생성) 되기전에 js 실행
    <headl>
        <script src='문자열.js'></script>
    </headl>

    2. html 모두 랜더링(생성) 후에 js 실행

[ DOM 객체 ]
    document 함수
    1. 내장 함수
        document.querySelector('선택자'); : 선택자의 마크업을 JS 객체로 반환하는 
            -query(질의-요청할게)
            -Selector(선택자)
                ->선택자 요청한다
                [ 선택자 ] : css 선택자 동일 ,1. 마크업명 2. .클래스명 3.#아이디명
                ex) document.querySelector(`ol`) : html의 ol마크업을 JS객체로 요청한다.

    2. 내장 속성/필드/멤버변수
        -innerHTML = `HTML코드`;
            -inner(내부-현재마크업 content )
            -HTML(HTML언어)
                ->현재 마크업에 넣을 html

    
















